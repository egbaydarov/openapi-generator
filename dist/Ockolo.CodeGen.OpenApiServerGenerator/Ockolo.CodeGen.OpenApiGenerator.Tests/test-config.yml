openapi: 3.1.3
info:
  title: Haulage API
  description: API for managing haulage data
  version: "v1"
servers:
  - url: https://api.byda.io/haulage/v1
components:
  schemas:
    TripInfoRequestModel:
      type: object
      required:
        - UserId
        - Origin
        - Destination
        - Stops
        - Attributes
        - Comment
      properties:
        UserId:
          type: integer
          format: int64
        Origin:
          $ref: '#/components/schemas/TripStopRequestModel'
        Destination:
          $ref: '#/components/schemas/TripStopRequestModel'
        Stops:
          type: array
          items:
            $ref: '#/components/schemas/TripStopRequestModel'
        Attributes:
          type: array
          items:
            $ref: '#/components/schemas/HaulageAttributeApiModel'
        Comment:
          type: string
    TripStopRequestModel:
      type: object
      required:
        - Timestamp
        - Location
      properties:
        Timestamp:
          type: string
          format: date-time
        City:
          type: string
        Country:
          type: string
    HaulageResponseModel:
      type: object
      required:
        - HaulageId
        - UserId
        - Origin
        - Destination
        - Stops
        - Attributes
        - Comment
      properties:
        HaulageId:
          type: string
        UserId:
          type: integer
          format: int64
        Origin:
          $ref: '#/components/schemas/HaulageTripStopResponseModel'
        Destination:
          $ref: '#/components/schemas/HaulageTripStopResponseModel'
        Stops:
          type: array
          items:
            $ref: '#/components/schemas/HaulageTripStopResponseModel'
        Attributes:
          type: array
          items:
            $ref: '#/components/schemas/HaulageAttributeApiModel'
        Comment:
          type: string
    HaulageTripStopResponseModel:
      type: object
      properties:
        Timestamp:
          type: string
          format: date-time
        Location:
          $ref: '#/components/schemas/HaulageStopLocation'
    HaulageStopLocation:
      type: object
      properties:
        City:
          type: string
        Country:
          type: string
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
    FilterCityCountryRequestModel:
      type: object
      required:
        - City
        - Country
      properties:
        City:
          type: string
        Country:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
        - success
      properties:
        message:
          type: string
        success:
          type: boolean
          default: false
    HaulageAttributeApiModel:
      type: string
      enum:
        - handheld
        - small_item
        - bulky_item
        - document
        - pharmaceutical
    CreateHaulageResult:
      type: object
      required:
        - data
        - success
      properties:
        data:
          $ref: '#/components/schemas/HaulageResponseModel'
        success:
          type: boolean
          default: true
    GetHaulageResult:
      type: object
      required:
        - data
        - success
      properties:
        data:
          $ref: '#/components/schemas/HaulageResponseModel'
        success:
          type: boolean
          default: true
    UpdateHaulageResult:
      type: object
      required:
        - data
        - success
      properties:
        data:
          $ref: '#/components/schemas/HaulageResponseModel'
        success:
          type: boolean
          default: true
    FindHaulagesByDestinationResult:
      type: object
      required:
        - data
        - success
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HaulageResponseModel'
        success:
          type: boolean
          default: true
paths:
  /create_haulage:
    post:
      operationId: "create_haulage"
      summary: Add a new Haulage
      tags:
        - haulage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripInfoRequestModel'
      responses:
        200:
          description: Haulage created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateHaulageResult'
        500:
          description: Internal unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /update_haulage/{id}:
    put:
      operationId: "put_haulage"
      summary: Update an existing Haulage by ID
      tags:
        - haulage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripInfoRequestModel'
      responses:
        '200':
          description: Haulage updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateHaulageResult'
        '204':
          description: Haulage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /get_haulage/{id}:
    get:
      operationId: "get_haulage"
      summary: Retrieve Haulage data by ID
      tags:
        - haulage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Haulage retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHaulageResult'
        '204':
          description: Haulage not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /get_many_filtered_haulages:
    get:
      operationId: "get_filtered_by_destination"
      summary: Retrieve a bunch of Haulages by filters
      tags:
        - haulage
      parameters:
        - name: city
          in: query
          required: true
          schema:
            type: string
        - name: country
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Haulages retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindHaulagesByDestinationResult'
        '400':
          description: Invalid filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
